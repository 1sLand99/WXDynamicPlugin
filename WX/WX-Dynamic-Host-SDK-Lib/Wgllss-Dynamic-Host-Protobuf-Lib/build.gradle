plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.protobuf.library)
}
android {
    namespace "com.wgllss.dynamic.host.lib.protobuf"
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdkVersion libs.versions.minSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdkVersion.get().toInteger()
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'//这里main下面存放.proto文件的目录名称不能为protobuf
                include '**/*.proto'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}
//第三部 写入这样一段配置脚本

protobuf {
    //配置protoc编译器
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.7'
    }
    //这里配置生成目录，编译后会在build的目录下生成对应的java文件
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.builtins {
                java {}
            }
        }
    }
}

dependencies {
//    implementation 'com.google.protobuf:protobuf-java:3.21.7'
    implementation libs.protobuf
    implementation 'com.google.protobuf:protoc:3.21.7'
}